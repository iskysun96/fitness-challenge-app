{
    "hints": {
        "app_create(uint64)void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "read_challenger_addr()address": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "optin_role(uint8)string": {
            "call_config": {
                "opt_in": "CALL"
            }
        },
        "deposit_stake(pay)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "start_challenge()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "end_challenge(uint8)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "claim_funds()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "delete()void": {
            "call_config": {
                "delete_application": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 7
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 3
        }
    },
    "schema": {
        "global": {
            "declared": {
                "challenge_result": {
                    "type": "uint64",
                    "key": "challenge_result",
                    "descr": "Int(1) if challenger successful, Int(0) if challenger fails."
                },
                "challenge_started": {
                    "type": "uint64",
                    "key": "challenge_started",
                    "descr": "Check if challenge is in progress. Int(0): not started, Int(1): in progress, Int(2): finished"
                },
                "challenger_addr": {
                    "type": "bytes",
                    "key": "challenger_addr",
                    "descr": "Address of the challenger"
                },
                "challenger_stake": {
                    "type": "uint64",
                    "key": "challenger_stake",
                    "descr": "Stake amount of the challenger"
                },
                "num_supporter": {
                    "type": "uint64",
                    "key": "num_supporter",
                    "descr": "Number of supporter"
                },
                "supporter_reward": {
                    "type": "uint64",
                    "key": "supporter_reward",
                    "descr": "How much each supporter should get if challenger fails."
                },
                "supporter_stake": {
                    "type": "uint64",
                    "key": "supporter_stake",
                    "descr": "Stake amount of the supporter"
                },
                "total_stake": {
                    "type": "uint64",
                    "key": "total_stake",
                    "descr": "Stake amount of the supporter"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "claimed": {
                    "type": "uint64",
                    "key": "claimed",
                    "descr": "Check if the account claimed reward. false: Int(0), true: Int(1)"
                },
                "role": {
                    "type": "uint64",
                    "key": "role",
                    "descr": "Supporter: Int(0), Challenger: Int(1)"
                },
                "staked": {
                    "type": "uint64",
                    "key": "staked",
                    "descr": "Check if the account staked. false: Int(0), true: Int(1)"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "fitness challenge app",
        "methods": [
            {
                "name": "app_create",
                "args": [
                    {
                        "type": "uint64",
                        "name": "stake_amt"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "read_challenger_addr",
                "args": [],
                "returns": {
                    "type": "address"
                }
            },
            {
                "name": "optin_role",
                "args": [
                    {
                        "type": "uint8",
                        "name": "addr_role"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "deposit_stake",
                "args": [
                    {
                        "type": "pay",
                        "name": "pay"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "start_challenge",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "end_challenge",
                "args": [
                    {
                        "type": "uint8",
                        "name": "result"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "claim_funds",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "delete",
                "args": [],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}