#pragma version 8
intcblock 0 1
bytecblock 0x746f74616c5f7374616b65 0x6e756d5f737570706f72746572 0x6368616c6c656e6765725f61646472 0x6368616c6c656e67655f73746172746564 0x726f6c65 0x7374616b6564 0x6368616c6c656e6765725f7374616b65 0x737570706f727465725f7374616b65 0x151f7c75 0x
txna ApplicationArgs 0
pushbytes 0x9cae293d // "app_create(uint64)void"
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0xe86ef29f // "read_challenger_addr()address"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0x1063582b // "optin_role(uint8,uint8)string"
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0x06d99b90 // "deposit_stake(pay)void"
==
bnz main_l11
txna ApplicationArgs 0
pushbytes 0xd62e0929 // "start_challenge()void"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0x5a74355c // "end_challenge(uint8)void"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0x24378d3c // "delete()void"
==
bnz main_l8
err
main_l8:
txn OnCompletion
pushint 5 // DeleteApplication
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub delete_9
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub endchallenge_7
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub startchallenge_6
intc_1 // 1
return
main_l11:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txn GroupIndex
intc_1 // 1
-
store 4
load 4
gtxns TypeEnum
intc_1 // pay
==
assert
load 4
callsub depositstake_5
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_1 // OptIn
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 1
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 2
load 1
load 2
callsub optinrole_4
store 3
bytec 8 // 0x151f7c75
load 3
concat
log
intc_1 // 1
return
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub readchallengeraddr_3
store 0
bytec 8 // 0x151f7c75
load 0
concat
log
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
==
&&
assert
txna ApplicationArgs 1
btoi
callsub appcreate_1
intc_1 // 1
return

// prefix_key_gen
prefixkeygen_0:
proto 1 1
pushbytes 0x6c6973745f6f665f737570706f7274657273 // "list_of_supporters"
frame_dig -1
concat
retsub

// app_create
appcreate_1:
proto 1 0
bytec_3 // "challenge_started"
intc_0 // 0
app_global_put
bytec_1 // "num_supporter"
intc_0 // 0
app_global_put
bytec_0 // "total_stake"
intc_0 // 0
app_global_put
intc_0 // 0
bytec_2 // "challenger_addr"
app_global_get_ex
store 6
store 5
load 6
!
assert
bytec_2 // "challenger_addr"
txn Sender
app_global_put
intc_0 // 0
bytec 6 // "challenger_stake"
app_global_get_ex
store 8
store 7
load 8
!
assert
bytec 6 // "challenger_stake"
frame_dig -1
app_global_put
intc_0 // 0
bytec 7 // "supporter_stake"
app_global_get_ex
store 10
store 9
load 10
!
assert
bytec 7 // "supporter_stake"
frame_dig -1
callsub calculatesupportstake_2
app_global_put
retsub

// calculate_support_stake
calculatesupportstake_2:
proto 1 1
frame_dig -1
pushint 10 // 10
/
retsub

// read_challenger_addr
readchallengeraddr_3:
proto 0 1
bytec 9 // ""
bytec_2 // "challenger_addr"
app_global_get
frame_bury 0
frame_dig 0
len
pushint 32 // 32
==
assert
retsub

// optin_role
optinrole_4:
proto 2 1
bytec 9 // ""
bytec_3 // "challenge_started"
app_global_get
intc_0 // 0
==
assert
txn Sender
bytec 4 // "role"
intc_0 // 0
app_local_put
txn Sender
bytec 5 // "staked"
intc_0 // 0
app_local_put
frame_dig -2
intc_1 // 1
==
bnz optinrole_4_l4
frame_dig -2
intc_0 // 0
==
bnz optinrole_4_l3
pushbytes 0x00055465737421 // 0x00055465737421
frame_bury 0
b optinrole_4_l5
optinrole_4_l3:
txn Sender
bytec_2 // "challenger_addr"
app_global_get
!=
assert
txn Sender
bytec 4 // "role"
intc_0 // 0
app_local_put
pushbytes 0x00 // 0x00
intc_0 // 0
frame_dig -1
setbyte
callsub prefixkeygen_0
txn Sender
app_global_put
bytec_1 // "num_supporter"
bytec_1 // "num_supporter"
app_global_get
intc_1 // 1
+
app_global_put
b optinrole_4_l5
optinrole_4_l4:
txn Sender
bytec_2 // "challenger_addr"
app_global_get
==
assert
txn Sender
bytec 4 // "role"
intc_1 // 1
app_local_put
optinrole_4_l5:
retsub

// deposit_stake
depositstake_5:
proto 1 0
txn Sender
global CurrentApplicationID
app_opted_in
// unauthorized
assert
txn Sender
bytec 5 // "staked"
app_local_get
intc_0 // 0
==
assert
txn Sender
bytec 4 // "role"
app_local_get
intc_1 // 1
==
bnz depositstake_5_l4
txn Sender
bytec 4 // "role"
app_local_get
intc_0 // 0
==
bnz depositstake_5_l3
intc_0 // 0
return
depositstake_5_l3:
frame_dig -1
gtxns Amount
bytec 7 // "supporter_stake"
app_global_get
==
assert
bytec_0 // "total_stake"
bytec_0 // "total_stake"
app_global_get
frame_dig -1
gtxns Amount
+
app_global_put
txn Sender
bytec 5 // "staked"
intc_1 // 1
app_local_put
b depositstake_5_l5
depositstake_5_l4:
frame_dig -1
gtxns Amount
bytec 6 // "challenger_stake"
app_global_get
==
assert
bytec_0 // "total_stake"
bytec_0 // "total_stake"
app_global_get
frame_dig -1
gtxns Amount
+
app_global_put
txn Sender
bytec 5 // "staked"
intc_1 // 1
app_local_put
depositstake_5_l5:
retsub

// start_challenge
startchallenge_6:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
txn Sender
bytec 5 // "staked"
app_local_get
intc_1 // 1
==
assert
bytec_1 // "num_supporter"
app_global_get
intc_0 // 0
>
assert
bytec_3 // "challenge_started"
intc_1 // 1
app_global_put
retsub

// end_challenge
endchallenge_7:
proto 1 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
frame_dig -1
intc_1 // 1
==
bnz endchallenge_7_l6
frame_dig -1
intc_0 // 0
==
bnz endchallenge_7_l3
intc_0 // 0
return
endchallenge_7_l3:
bytec_0 // "total_stake"
app_global_get
bytec_1 // "num_supporter"
app_global_get
/
store 12
intc_0 // 0
store 11
endchallenge_7_l4:
load 11
bytec_1 // "num_supporter"
app_global_get
<
bz endchallenge_7_l7
load 11
callsub prefixkeygen_0
app_global_get
load 12
callsub claimfunds_8
load 11
intc_1 // 1
+
store 11
b endchallenge_7_l4
endchallenge_7_l6:
bytec_2 // "challenger_addr"
app_global_get
bytec_0 // "total_stake"
app_global_get
callsub claimfunds_8
endchallenge_7_l7:
bytec_0 // "total_stake"
intc_0 // 0
app_global_put
bytec_3 // "challenge_started"
intc_0 // 0
app_global_put
retsub

// claim_funds
claimfunds_8:
proto 2 0
itxn_begin
intc_1 // pay
itxn_field TypeEnum
frame_dig -2
itxn_field Receiver
frame_dig -1
itxn_field Amount
intc_0 // 0
itxn_field Fee
itxn_submit
retsub

// delete
delete_9:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
bytec_3 // "challenge_started"
app_global_get
intc_0 // 0
==
assert
bytec_0 // "total_stake"
app_global_get
intc_0 // 0
==
assert
intc_1 // 1
return